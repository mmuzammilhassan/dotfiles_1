#                    “PICK ONE POWERFUL TOOL, 
#            MASTER IT TO THE POINT IT DISAPPEARS IN YOUR MIND, 
#        AND SPEND THE REST OF YOUR TIME BUILDING THINGS THAT MATTER.”

# TRY NOT TO STRAY FROM DEFAULTS

#########################
# General Configuration #
#########################
set -g prefix `                   # More standard than C-s (which can conflict with flow control)
set -g base-index 1               # Start window numbering at 1
set -g pane-base-index 1          # Start pane numbering at 1
set -g renumber-windows on        # Renumber windows when one is closed
set -g set-clipboard on           # Enable system clipboard
#set -g status-position bottom        # Status bar at top
set -g default-terminal "xterm-256color"
set -g -a terminal-overrides ",xterm*:Tc" # True color support
set -g history-limit 1000000      # Massive scrollback buffer
#set -g mouse on                   # Enable mouse support
set -g focus-events on            # For better neovim integration
set -g detach-on-destroy off      # Don't exit when closing session
set -g escape-time 0              # Faster escape sequences
#set -g pane-active-border-style 'fg=colour51,bg=default'
#set -g pane-border-style 'fg=colour235,bg=default'
#set -g pane-active-border-style 'fg=colour51,bg=default'
#set -g pane-border-style 'fg=colour51,bg=default'
set -g pane-active-border-style 'fg=white,bg=default'
set -g pane-border-style 'fg=white,bg=default'


################
# Key Bindings #
################
unbind r                          # Reload config
unbind C-b                        # Unbind default prefix
bind r source-file ~/.tmux.conf
bind x kill-pane                 # Kill current pane
#default copy-mode key is prefix-[

#default key is p, n
bind -n M-t last-window # default key prefix-t

#bind-key l last-window
#bind -n M-b last-pane   # default key is prefix-;

# default swap-window is prefix-{

#bind -n M-i swap-window -t -1   # Move window left
#bind -n M-r swap-window -t +1   # Move window right

# Split windows (with current path)
bind "'" split-window -v -c "#{pane_current_path}"
bind '.' split-window -h -c "#{pane_current_path}"

# Session management
bind g new-session 
bind -n C-f command-prompt -p "Find session:" "switch-client -t '%%'" # search with numbers
bind -n M-w switch-client -l
# default next/previous session keybind is prefix+( )


#THIS IS FROM PRIMEAGEN TODO KEY
# Main sessionizer (interactive fzf)
#bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
## bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
#
## Harpoon-style hotkeys (fixed session jump)
#bind-key -r M-h run-shell "tmux neww ~/.local/bin/tmux-sessionizer -s 0"
#bind-key -r M-t run-shell "tmux neww ~/.local/bin/tmux-sessionizer -s 1"
#bind-key -r M-n run-shell "tmux neww ~/.local/bin/tmux-sessionizer -s 2"
#bind-key -r M-s run-shell "tmux neww ~/.local/bin/tmux-sessionizer -s 3"

#CHATGPT ROCKS THIS TIME
# 🔍 C-f → fuzzy finder (pick folder, go to session)
bind-key -r M-f run-shell "~/.local/bin/tmux-sessionizer"

# 💾 Save current session to slot key
#bind-key -n M-g command-prompt -p "Assign session to slot (h/t/n/s):" "run-shell 'echo \"#{session_name}\" > ~/.tmux-session-slot-%%'"

# 📦 Jump to saved session slots (dynamically assigned)
#bind-key -n M-h run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-h 2>/dev/null || echo NO_SESSION)'
#bind-key -n M-t run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-t 2>/dev/null || echo NO_SESSION)'
#bind-key -n M-n run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-n 2>/dev/null || echo NO_SESSION)'
#bind-key -n M-s run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-s 2>/dev/null || echo NO_SESSION)'

# 💾 Save current session to slot key
bind-key -n M-g command-prompt -p "Assign session to slot (h/j/k/l):" "run-shell 'echo \"#{session_name}\" > ~/.tmux-session-slot-%%'"

# 📦 Jump to saved session slots (dynamically assigned)
bind-key -n M-h run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-h 2>/dev/null || echo NO_SESSION)'
bind-key -n M-j run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-j 2>/dev/null || echo NO_SESSION)'
bind-key -n M-k run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-k 2>/dev/null || echo NO_SESSION)'
bind-key -n M-l run-shell 'tmux switch-client -t $(cat ~/.tmux-session-slot-l 2>/dev/null || echo NO_SESSION)'


# Session fuzzy finder
#bind-key -r C-f run-shell "~/.local/bin/tmux-sessionizer"
#
## Save current session to a letter slot (script manages the slot)
#bind-key -r C-s run-shell "~/.local/bin/tmux-sessionizer save"
#
## Harpoon-style hotkeys (replace h/t/n/s with your preferred letters)
#bind-key -r M-h run-shell "~/.local/bin/tmux-sessionizer goto h"
#bind-key -r M-t run-shell "~/.local/bin/tmux-sessionizer goto t"
#bind-key -r M-n run-shell "~/.local/bin/tmux-sessionizer goto n"
#bind-key -r M-s run-shell "~/.local/bin/tmux-sessionizer goto s"

#CHEATSHEET
#-------------------------------------------------
#| Key   | Action                                |
#| ----- | ------------------------------------- |
#| `M-f` | Fuzzy find a project → open session   |
#| `M-g` | Save current session to a letter slot |
#| `M-h` | Jump to saved session in slot `h`     |
#| `M-k` | Jump to slot `k`, etc.                |
#-------------------------------------------------
# You can extend it with more slots like M-a, M-e, etc. Just copy the pattern.


# vim-like pane switching
#bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R


# Vi copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind -r UP resize-pane -U +5
bind -r DOWN resize-pane -D +5
bind -r LEFT resize-pane -L +10
bind -r RIGHT resize-pane -R +10

# vim like keybinds for resize-pane
#bind -r k resize-pane -U +5
#bind -r j resize-pane -D +5
#bind -r h resize-pane -L +10
#bind -r l resize-pane -R +10


#######################
# Visual Improvements #
#######################
# Status bar styling

#light theme
set -g status-style bg='#fffaf3',fg='#797592'

#dark theme
#set -g status-style bg='#1f1d2e',fg='#908caa'
#set -g status-style bg='#1f1d2e',fg='#ea6f91'
#set -g status-style fg='#ea6f91'
#set -g status-style bg='#2a273f',fg='#f2e984'

# single, double, heavy, simple, number
set -g pane-border-lines simple

# Inactive window style
set -g window-status-style fg="#797592"
#set -g window-status-style fg="#908caa"
#set -g window-status-last-style fg="#ea6f91"
#set -g window-status-current-style fg="#f1e883"

# Set status-right with custom text
set -g status-interval 1
set -g status-right " #(~/.local/bin/bt_blink_f)"
#set -g status-left "[#S]"
#set -g status-justify centre

# Use TrueColor in tmux (requires TERM to support it)
# Enable 256-color mode and TrueColor support
set -g default-terminal "xterm-256color"
set -g terminal-overrides ",xterm-256color*:Tc"
set -as terminal-overrides ',xterm-256color:Ss=\E[%p1%d q:Se=\E[2 q'

# set -g default-terminal "term-256color"
# set -g terminal-overrides ",term-256color*:Tc"


###########
# Plugins #
###########
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'

# Resurrect/continuum settings
#set -g @resurrect-strategy-nvim 'session'
#set -g @resurrect-capture-pane-contents 'on'
#  Automatically restore tmux state after reboot
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '15'

#  Bind prefix + a to save the tmux-continuum session and show a message
# bind-key a run-shell '~/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh; tmux display-message "Session-saved! 😊"'
#bind a run-shell '~/.local/bin/tmux-resurrect-save;'


# Initialize TMUX plugin manager (keep this line at the very bottom of your tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
